{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[I"
    },
    {
      "type": "[Lcom.azure.communication.email.models.EmailSendStatus;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljava.awt.datatransfer.DataFlavor;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.lang.reflect.AnnotatedType;"
    },
    {
      "type": "[Ljava.lang.reflect.Constructor;"
    },
    {
      "type": "[Ljava.lang.reflect.Field;"
    },
    {
      "type": "[Ljava.lang.reflect.Method;"
    },
    {
      "type": "[Ljava.lang.reflect.RecordComponent;"
    },
    {
      "type": "[Ljava.lang.reflect.Type;"
    },
    {
      "type": "[Ljava.lang.reflect.TypeVariable;"
    },
    {
      "type": "[Ljavax.activation.CommandInfo;"
    },
    {
      "type": "[Ljavax.mail.Address;"
    },
    {
      "type": "[Lkotlin.annotation.AnnotationTarget;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
    },
    {
      "type": "[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[Z"
    },
    {
      "type": "apple.security.AppleProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "boolean",
      "allDeclaredFields": true
    },
    {
      "type": "brave.Tracer"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.azure.communication.email.implementation.models.EmailContent",
      "allDeclaredFields": true
    },
    {
      "type": "com.azure.communication.email.implementation.models.EmailMessage",
      "allDeclaredFields": true
    },
    {
      "type": "com.azure.communication.email.implementation.models.EmailRecipients",
      "allDeclaredFields": true
    },
    {
      "type": "com.azure.communication.email.implementation.models.EmailSendResult",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "com.azure.communication.email.models.EmailSendStatus"
          ]
        }
      ]
    },
    {
      "type": "com.azure.communication.email.implementation.models.EmailsSendHeaders",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.azure.core.http.HttpHeaders"
          ]
        }
      ]
    },
    {
      "type": "com.azure.communication.email.implementation.models.EmailsSendResponse",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.azure.core.http.HttpRequest",
            "int",
            "com.azure.core.http.HttpHeaders",
            "com.azure.communication.email.implementation.models.EmailSendResult",
            "com.azure.communication.email.implementation.models.EmailsSendHeaders"
          ]
        }
      ]
    },
    {
      "type": "com.azure.communication.email.implementation.models.ErrorAdditionalInfo",
      "allDeclaredFields": true
    },
    {
      "type": "com.azure.communication.email.implementation.models.ErrorDetail",
      "allDeclaredFields": true
    },
    {
      "type": "com.azure.communication.email.models.EmailAddress",
      "allDeclaredFields": true
    },
    {
      "type": "com.azure.communication.email.models.EmailSendResult",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "com.azure.communication.email.models.EmailSendStatus",
            "com.azure.core.models.ResponseError"
          ]
        }
      ]
    },
    {
      "type": "com.azure.communication.email.models.EmailSendStatus",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "fromString",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.azure.core.http.HttpHeaderName",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.azure.core.http.netty.NettyAsyncHttpClientProvider"
    },
    {
      "type": "com.azure.core.http.netty.implementation.AzureSdkHandler"
    },
    {
      "type": "com.azure.core.implementation.util.SerializableContent",
      "fields": [
        {
          "name": "bytes"
        }
      ]
    },
    {
      "type": "com.azure.core.models.ResponseError",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "fromJson",
          "parameterTypes": [
            "com.azure.json.JsonReader"
          ]
        }
      ]
    },
    {
      "type": "com.azure.core.util.ExpandableEnum"
    },
    {
      "type": "com.azure.core.util.ExpandableStringEnum",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "toString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.azure.core.util.Header",
      "fields": [
        {
          "name": "cachedStringValue"
        }
      ]
    },
    {
      "type": "com.azure.core.util.QueryParameter",
      "fields": [
        {
          "name": "cachedStringValue"
        }
      ]
    },
    {
      "type": "com.azure.core.util.polling.LongRunningOperationStatus",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.azure.core.util.polling.implementation.PollResult",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setStatus",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.azure.json.JsonSerializable"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory",
      "methods": [
        {
          "name": "setStreamReadConstraints",
          "parameterTypes": [
            "com.fasterxml.jackson.core.StreamReadConstraints"
          ]
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.StreamReadConstraints",
      "methods": [
        {
          "name": "builder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.core.StreamReadConstraints$Builder",
      "methods": [
        {
          "name": "build",
          "parameterTypes": []
        },
        {
          "name": "maxStringLength",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.afterburner.AfterburnerModule"
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule$Builder"
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.SingletonSupport"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.google.gson.Gson"
    },
    {
      "type": "com.google.protobuf.Message"
    },
    {
      "type": "com.hazelcast.core.Hazelcast"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.hazelcast.spring.cache.HazelcastCache"
    },
    {
      "type": "com.ibm.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "com.kinectmessaging.email.KinectEmailApplication",
      "allDeclaredFields": true
    },
    {
      "type": "com.kinectmessaging.email.KinectEmailApplication$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.KinectEmailApplicationKt",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.client.ApiClient",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.client.Config",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "contactHistoryWebClient",
          "parameterTypes": [
            "org.springframework.web.reactive.function.client.WebClient$Builder"
          ]
        },
        {
          "name": "templateWebClient",
          "parameterTypes": [
            "org.springframework.web.reactive.function.client.WebClient$Builder"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.client.Config$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.client.Config$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.client.Config$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.controller.ControllerExceptionHandler",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.controller.EmailController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "sendEmail",
          "parameterTypes": [
            "com.kinectmessaging.libs.model.KMessage",
            "java.lang.String",
            "kotlin.coroutines.Continuation"
          ]
        },
        {
          "name": "sendEmail$suspendImpl",
          "parameterTypes": [
            "com.kinectmessaging.email.controller.EmailController",
            "com.kinectmessaging.libs.model.KMessage",
            "java.lang.String",
            "kotlin.coroutines.Continuation"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.service.AzureEmailService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.email.service.EmailService"
    },
    {
      "type": "com.kinectmessaging.libs.model.Attachment",
      "allDeclaredFields": true
    },
    {
      "type": "com.kinectmessaging.libs.model.Audit",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.ContactMessages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContactAddress",
          "parameterTypes": []
        },
        {
          "name": "getDeliveryChannel",
          "parameterTypes": []
        },
        {
          "name": "getDeliveryStatus",
          "parameterTypes": []
        },
        {
          "name": "getDeliveryTrackingId",
          "parameterTypes": []
        },
        {
          "name": "getEngagementStatus",
          "parameterTypes": []
        },
        {
          "name": "getMessageId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.DeliveryChannel",
      "allDeclaredFields": true
    },
    {
      "type": "com.kinectmessaging.libs.model.DeliveryStatus",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getOriginalStatus",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        },
        {
          "name": "getStatusMessage",
          "parameterTypes": []
        },
        {
          "name": "getStatusTime",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.EmailData",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Map",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.util.List",
            "java.util.List",
            "java.util.List",
            "java.util.List",
            "java.util.List",
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.EmailData$Access4JacksonSerializer2c106597",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.EngagementStatus"
    },
    {
      "type": "com.kinectmessaging.libs.model.HistoryStatusCodes",
      "allDeclaredFields": true
    },
    {
      "type": "com.kinectmessaging.libs.model.KMessage",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.kinectmessaging.libs.model.DeliveryChannel",
            "com.kinectmessaging.libs.model.TargetSystem",
            "com.kinectmessaging.libs.model.EmailData"
          ]
        },
        {
          "name": "getEmailData",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.KMessage$Access4JacksonSerializer98a44fc7",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.KTemplate",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.kinectmessaging.libs.model.TemplateType",
            "com.kinectmessaging.libs.model.TemplateLanguage",
            "java.lang.String",
            "com.kinectmessaging.libs.model.Audit"
          ]
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.TargetSystem",
      "allDeclaredFields": true
    },
    {
      "type": "com.kinectmessaging.libs.model.TemplateLanguage",
      "allDeclaredFields": true
    },
    {
      "type": "com.kinectmessaging.libs.model.TemplatePersonalizationRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getHtmlTemplateId",
          "parameterTypes": []
        },
        {
          "name": "getPersonalizationData",
          "parameterTypes": []
        },
        {
          "name": "getTextTemplateId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.kinectmessaging.libs.model.TemplateType",
      "allDeclaredFields": true
    },
    {
      "type": "com.maciejwalkowiak.spring.boot.startup.ReportRenderer",
      "allDeclaredFields": true
    },
    {
      "type": "com.maciejwalkowiak.spring.boot.startup.StartupEventsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reportRenderer",
          "parameterTypes": [
            "com.maciejwalkowiak.spring.boot.startup.TimelineFactory",
            "org.springframework.core.io.ResourceLoader"
          ]
        },
        {
          "name": "startupEventsController",
          "parameterTypes": [
            "com.maciejwalkowiak.spring.boot.startup.ReportRenderer"
          ]
        },
        {
          "name": "tagsResolver",
          "parameterTypes": []
        },
        {
          "name": "timelineFactory",
          "parameterTypes": [
            "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup",
            "com.maciejwalkowiak.spring.boot.startup.TagsResolver"
          ]
        }
      ]
    },
    {
      "type": "com.maciejwalkowiak.spring.boot.startup.StartupEventsController",
      "allDeclaredFields": true
    },
    {
      "type": "com.maciejwalkowiak.spring.boot.startup.StartupEventsInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.maciejwalkowiak.spring.boot.startup.TagsResolver",
      "allDeclaredFields": true
    },
    {
      "type": "com.maciejwalkowiak.spring.boot.startup.TimelineFactory",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.MongoClientSettings"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rabbitmq.client.ConnectionFactory"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.GarbageCollectionNotificationInfo"
    },
    {
      "type": "com.sun.management.GcInfo",
      "fields": [
        {
          "name": "builder"
        },
        {
          "name": "extAttributes"
        }
      ]
    },
    {
      "type": "com.sun.management.OperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.UnixOperatingSystemMXBean"
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.security.cert.internal.x509.X509V1CertImpl"
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.wavefront.sdk.common.WavefrontSender"
    },
    {
      "type": "com.wavefront.sdk.common.application.ApplicationTags"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
    },
    {
      "type": "io.micrometer.appoptics.AppOpticsMeterRegistry"
    },
    {
      "type": "io.micrometer.atlas.AtlasMeterRegistry"
    },
    {
      "type": "io.micrometer.common.lang.NonNullApi"
    },
    {
      "type": "io.micrometer.common.lang.NonNullFields"
    },
    {
      "type": "io.micrometer.common.lang.Nullable"
    },
    {
      "type": "io.micrometer.context.ContextRegistry"
    },
    {
      "type": "io.micrometer.core.annotation.Timed"
    },
    {
      "type": "io.micrometer.core.instrument.Clock"
    },
    {
      "type": "io.micrometer.core.instrument.Clock$1",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.binder.MeterBinder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter$9",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowMax",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowSum",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.observation.MeterObservationHandler"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleConfig"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.datadog.DatadogMeterRegistry"
    },
    {
      "type": "io.micrometer.dynatrace.DynatraceMeterRegistry"
    },
    {
      "type": "io.micrometer.elastic.ElasticMeterRegistry"
    },
    {
      "type": "io.micrometer.ganglia.GangliaMeterRegistry"
    },
    {
      "type": "io.micrometer.graphite.GraphiteMeterRegistry"
    },
    {
      "type": "io.micrometer.humio.HumioMeterRegistry"
    },
    {
      "type": "io.micrometer.influx.InfluxMeterRegistry"
    },
    {
      "type": "io.micrometer.jmx.JmxMeterRegistry"
    },
    {
      "type": "io.micrometer.kairos.KairosMeterRegistry"
    },
    {
      "type": "io.micrometer.newrelic.NewRelicMeterRegistry"
    },
    {
      "type": "io.micrometer.observation.Observation"
    },
    {
      "type": "io.micrometer.observation.ObservationConvention"
    },
    {
      "type": "io.micrometer.observation.ObservationFilter"
    },
    {
      "type": "io.micrometer.observation.ObservationHandler"
    },
    {
      "type": "io.micrometer.observation.ObservationPredicate"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry"
    },
    {
      "type": "io.micrometer.observation.SimpleObservationRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.prometheus.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.registry.otlp.OtlpMeterRegistry"
    },
    {
      "type": "io.micrometer.signalfx.SignalFxMeterRegistry"
    },
    {
      "type": "io.micrometer.stackdriver.StackdriverMeterRegistry"
    },
    {
      "type": "io.micrometer.statsd.StatsdMeterRegistry"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.buffer.ByteBuf"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.epoll.Epoll"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.kqueue.KQueue"
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
    },
    {
      "type": "io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
    },
    {
      "type": "io.netty.handler.codec.http.HttpClientCodec"
    },
    {
      "type": "io.netty.handler.codec.http.HttpServerCodec"
    },
    {
      "type": "io.netty.handler.ssl.SslHandler"
    },
    {
      "type": "io.netty.incubator.channel.uring.IOUring"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallback"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask"
    },
    {
      "type": "io.netty.resolver.dns.Cache$Entries",
      "fields": [
        {
          "name": "expirationFuture"
        }
      ]
    },
    {
      "type": "io.netty.resolver.dns.DnsNameResolver$2"
    },
    {
      "type": "io.netty.resolver.dns.DnsNameResolver$3"
    },
    {
      "type": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler"
    },
    {
      "type": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
      "fields": [
        {
          "name": "attributeMap"
        }
      ]
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
      "fields": [
        {
          "name": "droppedRecords"
        },
        {
          "name": "head"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty5.buffer.Buffer"
    },
    {
      "type": "io.opentelemetry.sdk.OpenTelemetrySdk"
    },
    {
      "type": "io.r2dbc.pool.ConnectionPool"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "java.awt.datatransfer.Transferable"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.ObjectInputStream"
    },
    {
      "type": "java.io.Serializable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Deprecated",
      "methods": [
        {
          "name": "forRemoval",
          "parameterTypes": []
        },
        {
          "name": "since",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Enum",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Enum$EnumDesc"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "addReads",
          "parameterTypes": [
            "java.lang.Module"
          ]
        },
        {
          "name": "isNamed",
          "parameterTypes": []
        },
        {
          "name": "isOpen",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "isOpen",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Module"
          ]
        }
      ]
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.String",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.annotation.Target",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.constant.Constable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.ConstantDesc"
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc"
    },
    {
      "type": "java.lang.invoke.MethodHandles",
      "methods": [
        {
          "name": "privateLookupIn",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.invoke.MethodHandles$Lookup"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.TypeDescriptor"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.MemoryUsage",
      "methods": [
        {
          "name": "from",
          "parameterTypes": [
            "javax.management.openmbean.CompositeData"
          ]
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.Method"
    },
    {
      "type": "java.lang.reflect.Parameter",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.math.BigDecimal"
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.SocketOption"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.StandardSocketOptions",
      "fields": [
        {
          "name": "IP_MULTICAST_IF"
        },
        {
          "name": "IP_MULTICAST_LOOP"
        },
        {
          "name": "IP_MULTICAST_TTL"
        }
      ]
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.nio.channels.NetworkChannel"
    },
    {
      "type": "java.nio.channels.spi.SelectorProvider"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.time.LocalDateTime"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicMarkableReference",
      "fields": [
        {
          "name": "pair"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64$Cell",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.logging.LogManager"
    },
    {
      "type": "javax.activation.CommandMap",
      "allDeclaredFields": true
    },
    {
      "type": "javax.activation.DataHandler",
      "allDeclaredFields": true
    },
    {
      "type": "javax.activation.DataSource"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.cache.CacheManager"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.mail.Address",
      "allDeclaredFields": true
    },
    {
      "type": "javax.mail.BodyPart",
      "allDeclaredFields": true
    },
    {
      "type": "javax.mail.Multipart",
      "allDeclaredFields": true
    },
    {
      "type": "javax.mail.Part"
    },
    {
      "type": "javax.mail.Session"
    },
    {
      "type": "javax.mail.internet.InternetAddress",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAddress",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPersonal",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javax.mail.internet.InternetAddress$Access4JacksonSerializer951c0434",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.mail.internet.MimeBodyPart",
      "allDeclaredFields": true
    },
    {
      "type": "javax.mail.internet.MimePart"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.net.ssl.SSLContext",
      "fields": [
        {
          "name": "contextSpi"
        }
      ]
    },
    {
      "type": "javax.persistence.EntityManagerFactory"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.ValueBased"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.Any"
    },
    {
      "type": "kotlin.Array"
    },
    {
      "type": "kotlin.Boolean"
    },
    {
      "type": "kotlin.Cloneable"
    },
    {
      "type": "kotlin.Comparable"
    },
    {
      "type": "kotlin.Deprecated"
    },
    {
      "type": "kotlin.Enum"
    },
    {
      "type": "kotlin.Int"
    },
    {
      "type": "kotlin.Long"
    },
    {
      "type": "kotlin.Metadata",
      "methods": [
        {
          "name": "bv",
          "parameterTypes": []
        },
        {
          "name": "d1",
          "parameterTypes": []
        },
        {
          "name": "d2",
          "parameterTypes": []
        },
        {
          "name": "k",
          "parameterTypes": []
        },
        {
          "name": "mv",
          "parameterTypes": []
        },
        {
          "name": "pn",
          "parameterTypes": []
        },
        {
          "name": "xi",
          "parameterTypes": []
        },
        {
          "name": "xs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.String"
    },
    {
      "type": "kotlin.Unit"
    },
    {
      "type": "kotlin.annotation.AnnotationRetention"
    },
    {
      "type": "kotlin.annotation.AnnotationTarget"
    },
    {
      "type": "kotlin.annotation.MustBeDocumented"
    },
    {
      "type": "kotlin.annotation.Retention"
    },
    {
      "type": "kotlin.annotation.Target",
      "methods": [
        {
          "name": "allowedTargets",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.collections.List"
    },
    {
      "type": "kotlin.collections.Map"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.coroutines.jvm.internal.DebugMetadata"
    },
    {
      "type": "kotlin.jvm.JvmInline"
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.reflect.full.KClasses"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
      "allPublicFields": true
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl"
    },
    {
      "type": "kotlinx.coroutines.CancellableContinuationImpl",
      "fields": [
        {
          "name": "_decisionAndIndex$volatile"
        },
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CompletedExceptionally",
      "fields": [
        {
          "name": "_handled$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.DispatchedCoroutine",
      "fields": [
        {
          "name": "_decision$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport$Finishing",
      "fields": [
        {
          "name": "_exceptionsHolder$volatile"
        },
        {
          "name": "_isCompleting$volatile"
        },
        {
          "name": "_rootCause$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LimitedDispatcher",
      "fields": [
        {
          "name": "runningWorkers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.coroutines.reactor.ReactorContextInjector"
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
      "fields": [
        {
          "name": "workerCtl$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.WorkQueue",
      "fields": [
        {
          "name": "blockingTasksInBuffer$volatile"
        },
        {
          "name": "consumerIndex$volatile"
        },
        {
          "name": "lastScheduledTask$volatile"
        },
        {
          "name": "producerIndex$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "liquibase.integration.spring.SpringLiquibase"
    },
    {
      "type": "net.logstash.logback.encoder.LogstashEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
    },
    {
      "type": "org.apache.hc.core5.http.nio.AsyncRequestProducer"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveDataConsumer"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveResponseConsumer"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.LoggerContext"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
    },
    {
      "type": "org.cache2k.extra.spring.SpringCache2kCache"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.servlet.ServletHolder"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClient"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
    },
    {
      "type": "org.glassfish.jersey.server.ResourceConfig"
    },
    {
      "type": "org.glassfish.jersey.servlet.ServletContainer"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.influxdb.InfluxDB"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.LoggerFactory"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springframework.amqp.rabbit.core.RabbitTemplate"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding"
    },
    {
      "type": "org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.SpringApplication"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventRepository"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointCachingOperationInvokerAdvisor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "endpointOperationParameterMapper",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointObjectMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "controllerEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "controllerExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        },
        {
          "name": "endpointMediaTypes",
          "parameterTypes": []
        },
        {
          "name": "pathMappedEndpoints",
          "parameterTypes": [
            "java.util.Collection"
          ]
        },
        {
          "name": "webEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webEndpointPathMapper",
          "parameterTypes": []
        },
        {
          "name": "webExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "controllerEndpointHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "serverCodecConfigurerEndpointObjectMapperBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webEndpointReactiveHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "pingHealthContributor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthContributorRegistry",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "java.util.Map",
            "java.util.Map"
          ]
        },
        {
          "name": "healthEndpoint",
          "parameterTypes": [
            "org.springframework.boot.actuate.health.HealthContributorRegistry",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthEndpointGroupMembershipValidator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
            "org.springframework.boot.actuate.health.HealthContributorRegistry"
          ]
        },
        {
          "name": "healthEndpointGroups",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthEndpointGroupsBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "healthHttpCodeStatusMapper",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthStatusAggregator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveHealthEndpointWebExtension",
          "parameterTypes": [
            "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthEndpointWebFluxHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveHealthContributorRegistry",
          "parameterTypes": [
            "java.util.Map",
            "java.util.Map",
            "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "classLoaderMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmCompilationMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmGcMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmHeapPressureMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmInfoMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmMemoryMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmThreadMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "logbackMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "meterRegistryCloser",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "meterRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "micrometerClock",
          "parameterTypes": []
        },
        {
          "name": "propertiesMeterFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceMetrics",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        },
        {
          "name": "fileDescriptorMetrics",
          "parameterTypes": []
        },
        {
          "name": "processorMetrics",
          "parameterTypes": []
        },
        {
          "name": "uptimeMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "simpleConfig",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
          ]
        },
        {
          "name": "simpleMeterRegistry",
          "parameterTypes": [
            "io.micrometer.core.instrument.simple.SimpleConfig",
            "io.micrometer.core.instrument.Clock"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "startupTimeMetrics",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bindTaskExecutorsToRegistry",
          "parameterTypes": [
            "java.util.Map",
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "eagerTaskExecutorMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRegistry",
          "parameterTypes": []
        },
        {
          "name": "observationRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "propertiesObservationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultMeterObservationHandler",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsObservationHandlerGrouping",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpClientUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationWebClientCustomizer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        },
        {
          "name": "defaultServerRequestObservationConvention",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpServerUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observabilitySchedulingConfigurer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceHealthIndicator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveWebChildContextFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.cache.CachesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.ShutdownEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeReactiveHealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.ContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroups"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.HttpCodeStatusMapper"
    },
    {
      "type": "org.springframework.boot.actuate.health.PingHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.StatusAggregator"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LoggersEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.startup.StartupEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceAutoProxyCreatorToUseClassProxying",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.codec.CodecProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultCodecCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.codec.CodecProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonCodecCustomizer",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.netty.NettyProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactorResourceFactory",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "taskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.TaskExecutorBuilder",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "taskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "nettyWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "httpHandler",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultPartHttpMessageReaderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "nettyReactiveWebServerFactory",
          "parameterTypes": [
            "org.springframework.http.client.ReactorResourceFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "localeContextResolver",
          "parameterTypes": []
        },
        {
          "name": "webFluxConversionService",
          "parameterTypes": []
        },
        {
          "name": "webFluxValidator",
          "parameterTypes": []
        },
        {
          "name": "webSessionManager",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "welcomePageRouterFunctionMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
          ]
        },
        {
          "name": "webSessionIdResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorWebExceptionHandler",
          "parameterTypes": [
            "org.springframework.boot.web.reactive.error.ErrorAttributes",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientHttpConnector",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
          ]
        },
        {
          "name": "webClientHttpConnectorCustomizer",
          "parameterTypes": [
            "org.springframework.http.client.reactive.ClientHttpConnector"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactorClientHttpConnectorFactory",
          "parameterTypes": [
            "org.springframework.http.client.ReactorResourceFactory",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webClientSsl",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "exchangeStrategiesCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudPlatform"
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.DelegatingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.loader.launch.LaunchedClassLoader"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.TaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.TaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.codec.CodecCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler"
    },
    {
      "type": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCache"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cache.jcache.JCacheCache"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "configurationPropertiesBeans",
          "parameterTypes": []
        },
        {
          "name": "configurationPropertiesRebinder",
          "parameterTypes": [
            "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "environmentManager",
          "parameterTypes": [
            "org.springframework.core.env.ConfigurableEnvironment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "configDataContextRefresher",
          "parameterTypes": [
            "org.springframework.context.ConfigurableApplicationContext",
            "org.springframework.cloud.context.scope.refresh.RefreshScope",
            "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
          ]
        },
        {
          "name": "loggingRebinder",
          "parameterTypes": []
        },
        {
          "name": "refreshEventListener",
          "parameterTypes": [
            "org.springframework.cloud.context.refresh.ContextRefresher"
          ]
        },
        {
          "name": "refreshScope",
          "parameterTypes": []
        },
        {
          "name": "refreshScopeLifecycle",
          "parameterTypes": [
            "org.springframework.cloud.context.refresh.ContextRefresher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "refreshScopeHealthIndicator",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.marker.Marker"
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "discoveryClientHealthIndicator",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
          ]
        },
        {
          "name": "discoveryCompositeHealthContributor",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "springCloudCommonsFeatures",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveCommonsFeatures",
          "parameterTypes": []
        },
        {
          "name": "reactiveDiscoveryClients",
          "parameterTypes": [
            "java.util.Collection"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.actuator.FeaturesEndpoint"
    },
    {
      "type": "org.springframework.cloud.client.actuator.HasFeatures",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.DiscoveryClient"
    },
    {
      "type": "org.springframework.cloud.client.discovery.ReactiveDiscoveryClient"
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "compositeDiscoveryClient",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveCompositeDiscoveryClient",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator"
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator"
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setInet",
          "parameterTypes": [
            "org.springframework.cloud.commons.util.InetUtils"
          ]
        },
        {
          "name": "setServer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "simpleDiscoveryClient",
          "parameterTypes": [
            "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
          ]
        },
        {
          "name": "simpleDiscoveryProperties",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "simpleReactiveDiscoveryClient",
          "parameterTypes": [
            "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"
          ]
        },
        {
          "name": "simpleReactiveDiscoveryProperties",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "simpleReactiveDiscoveryClientHealthIndicator",
          "parameterTypes": [
            "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
            "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.BlockingRestClassesPresentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerClient"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loadBalancerClientsDefaultsMappingsProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory"
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistry"
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultsBindHandlerAdvisor",
          "parameterTypes": [
            "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider"
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtilsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "inetUtils",
          "parameterTypes": [
            "org.springframework.cloud.commons.util.InetUtilsProperties"
          ]
        },
        {
          "name": "inetUtilsProperties",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "configClientProperties",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigClientAutoConfiguration$ConfigServerHealthIndicatorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clientConfigServerHealthIndicator",
          "parameterTypes": [
            "org.springframework.cloud.config.client.ConfigClientHealthProperties",
            "org.springframework.core.env.ConfigurableEnvironment"
          ]
        },
        {
          "name": "configClientHealthProperties",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigClientHealthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigClientRetryBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigServerConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigServerConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigServerConfigDataMissingEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigServerHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifier"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "compositeCompatibilityVerifier",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "sleuthPresentVerifier",
          "parameterTypes": []
        },
        {
          "name": "springBootVersionVerifier",
          "parameterTypes": [
            "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SleuthPresentVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.environment.EnvironmentManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.ContextRefresher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.RefreshScopeLifecycle",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.context.scope.refresh.RefreshScope"
    },
    {
      "type": "org.springframework.cloud.endpoint.RefreshEndpoint"
    },
    {
      "type": "org.springframework.cloud.endpoint.event.RefreshEventListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.logging.LoggingRebinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.sleuth.Tracer"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisherAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener",
      "fields": [
        {
          "name": "supportsAsyncExecution"
        }
      ]
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener"
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCache"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.repository.Repository"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.Link"
    },
    {
      "type": "org.springframework.http.HttpEntity"
    },
    {
      "type": "org.springframework.http.HttpStatus"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.ResponseEntity"
    },
    {
      "type": "org.springframework.http.client.ReactorResourceFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.client.reactive.ReactorClientHttpConnector",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.ClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.codec.support.BaseCodecConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.http.server.reactive.observation.DefaultServerRequestObservationConvention",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.observation.ServerRequestObservationConvention"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.integration.graph.IntegrationGraphServer"
    },
    {
      "type": "org.springframework.integration.monitor.IntegrationMBeanExporter"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedAttribute"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedOperation"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedResource"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.ldap.core.LdapOperations"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.retry.annotation.Retryable"
    },
    {
      "type": "org.springframework.retry.support.RetryTemplate"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.core.context.ReactiveSecurityContextHolder"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.TextEncryptor"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsa.crypto.RsaSecretEncryptor"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestMatcher"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestHeader"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.cors.reactive.PreFlightRequestHandler"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter"
    },
    {
      "type": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.web.reactive.DispatchExceptionHandler"
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.reactive.HandlerMapping"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResultHandler"
    },
    {
      "type": "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
    },
    {
      "type": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.config.EnableWebFlux"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.reactive.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "responseBodyResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "responseEntityResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "responseStatusExceptionHandler",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.http.codec.ServerCodecConfigurer"
          ]
        },
        {
          "name": "serverCodecConfigurer",
          "parameterTypes": []
        },
        {
          "name": "serverResponseResultHandler",
          "parameterTypes": [
            "org.springframework.http.codec.ServerCodecConfigurer"
          ]
        },
        {
          "name": "simpleHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewResolutionResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "webFluxAdapterRegistry",
          "parameterTypes": []
        },
        {
          "name": "webFluxContentTypeResolver",
          "parameterTypes": []
        },
        {
          "name": "webFluxWebSocketHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "webHandler",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurationSupport$NoOpValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.DefaultWebClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.DefaultWebClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$Builder"
    },
    {
      "type": "org.springframework.web.reactive.function.server.HandlerFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.WebExceptionHandler"
    },
    {
      "type": "org.springframework.web.server.WebHandler"
    },
    {
      "type": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.handler.WebHandlerDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.i18n.LocaleContextResolver"
    },
    {
      "type": "org.springframework.web.server.session.CookieWebSessionIdResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.DefaultWebSessionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.WebSessionIdResolver"
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.EnableWebMvc"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
      "fields": [
        {
          "name": "fallbackValue"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFirstWithSignal$RaceCoordinator",
      "fields": [
        {
          "name": "winner"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxIterable$IterableSubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish$PubSubInner",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish$PublishSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "state"
        },
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxRepeatPredicate$RepeatPredicateSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription",
      "fields": [
        {
          "name": "mainFuture"
        },
        {
          "name": "requestFuture"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxUsing$UsingSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.LambdaMonoSubscriber",
      "fields": [
        {
          "name": "subscription"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.core.publisher.MonoCacheTime",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCallable$MonoCallableSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCreate$DefaultMonoSink",
      "fields": [
        {
          "name": "disposable"
        },
        {
          "name": "requestConsumer"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
      "fields": [
        {
          "name": "second"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain",
      "fields": [
        {
          "name": "inner"
        },
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoNext$NextSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoSupplier$MonoSupplierSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoUsing$MonoUsingSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoWhen$WhenCoordinator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoWhen$WhenInner",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoZip$ZipCoordinator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoZip$ZipInner",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$BaseFluxToMonoOperator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$DeferredSubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MonoInnerProducerBase",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
      "fields": [
        {
          "name": "missedProduced"
        },
        {
          "name": "missedRequested"
        },
        {
          "name": "missedSubscription"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$ScalarSubscription",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinkEmptyMulticast",
      "fields": [
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinkManyEmitterProcessor",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "s"
        },
        {
          "name": "subscribers"
        },
        {
          "name": "upstreamDisposable"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinksSpecs$AbstractSerializedSink",
      "fields": [
        {
          "name": "lockedAt"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.StrictSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "s"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler$BoundedServices",
      "fields": [
        {
          "name": "busyStates"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler$BoundedState",
      "fields": [
        {
          "name": "markCount"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.ParallelScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.SchedulerTask",
      "fields": [
        {
          "name": "future"
        },
        {
          "name": "parent"
        }
      ]
    },
    {
      "type": "reactor.netty.channel.ChannelOperations",
      "fields": [
        {
          "name": "outboundSubscription"
        }
      ]
    },
    {
      "type": "reactor.netty.channel.ChannelOperationsHandler"
    },
    {
      "type": "reactor.netty.channel.FluxReceive",
      "fields": [
        {
          "name": "receiverCancel"
        }
      ]
    },
    {
      "type": "reactor.netty.http.Cookies",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.netty.http.HttpOperations",
      "fields": [
        {
          "name": "statusAndHeadersSent"
        }
      ]
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.netty.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.netty.http.server.HttpTrafficHandler"
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.AbstractPool$AbstractPooledRef",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.AllocationStrategies$SizeBasedAllocationStrategy",
      "fields": [
        {
          "name": "permits"
        }
      ]
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.SimpleDequePool",
      "fields": [
        {
          "name": "acquired"
        },
        {
          "name": "idleResources"
        },
        {
          "name": "idleSize"
        },
        {
          "name": "pending"
        },
        {
          "name": "pendingSize"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.SimpleDequePool$QueuePoolRecyclerInner",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
    },
    {
      "type": "reactor.netty.tcp.SslProvider$SslReadHandler"
    },
    {
      "type": "reactor.netty.transport.ServerTransport$Acceptor"
    },
    {
      "type": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
    },
    {
      "type": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
    },
    {
      "type": "reactor.netty.transport.TransportConnector$MonoChannelPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "reactor.netty5.http.client.HttpClient"
    },
    {
      "type": "reactor.netty5.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "reactor.util.concurrent.SpscLinkedArrayQueue",
      "fields": [
        {
          "name": "consumerIndex"
        },
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA384withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$AbstractTLSContext",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$CustomizedTLSContext",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "fields": [
        {
          "name": "trustManager"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "zipkin2.reporter.Encoding"
    },
    {
      "type": {
        "proxy": [
          "com.azure.communication.email.implementation.EmailsImpl$EmailsService"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ControllerAdvice"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestHeader"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/io.netty.versions.properties"
    },
    {
      "glob": "META-INF/javamail.charset.map"
    },
    {
      "glob": "META-INF/maven/io.netty/netty-tcnative-boringssl-static/pom.properties"
    },
    {
      "glob": "META-INF/native/libnetty_resolver_dns_native_macos.dylib"
    },
    {
      "glob": "META-INF/native/libnetty_resolver_dns_native_macos.jnilib"
    },
    {
      "glob": "META-INF/native/libnetty_resolver_dns_native_macos_aarch_64.dylib"
    },
    {
      "glob": "META-INF/native/libnetty_resolver_dns_native_macos_aarch_64.jnilib"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative_osx_aarch_64.dylib"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative_osx_aarch_64.jnilib"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_kqueue.dylib"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_kqueue.jnilib"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_kqueue_aarch_64.dylib"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_kqueue_aarch_64.jnilib"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.azure.core.http.HttpClientProvider"
    },
    {
      "glob": "META-INF/services/com.azure.core.http.policy.AfterRetryPolicyProvider"
    },
    {
      "glob": "META-INF/services/com.azure.core.http.policy.BeforeRetryPolicyProvider"
    },
    {
      "glob": "META-INF/services/com.azure.core.util.serializer.JsonSerializerProvider"
    },
    {
      "glob": "META-INF/services/com.azure.core.util.tracing.Tracer"
    },
    {
      "glob": "META-INF/services/com.azure.core.util.tracing.TracerProvider"
    },
    {
      "glob": "META-INF/services/com.azure.json.JsonProvider"
    },
    {
      "glob": "META-INF/services/com.fasterxml.jackson.databind.Module"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.SAXParserFactory"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/kotlinx.coroutines.reactive.ContextInjector"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "azure-communication-email.properties"
    },
    {
      "glob": "azure-core-http-netty.properties"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "com/kinectmessaging/email/"
    },
    {
      "glob": "com/kinectmessaging/email/client/ApiClient.class"
    },
    {
      "glob": "com/kinectmessaging/email/client/Config.class"
    },
    {
      "glob": "com/kinectmessaging/email/controller/ControllerExceptionHandler.class"
    },
    {
      "glob": "com/kinectmessaging/email/controller/EmailController$WhenMappings.class"
    },
    {
      "glob": "com/kinectmessaging/email/controller/EmailController.class"
    },
    {
      "glob": "com/kinectmessaging/email/service/AzureEmailService.class"
    },
    {
      "glob": "com/kinectmessaging/email/service/EmailService.class"
    },
    {
      "glob": "com/maciejwalkowiak/spring/boot/startup/StartupEventsAutoConfiguration.class"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "kotlin/Metadata.class"
    },
    {
      "glob": "kotlin/annotation/MustBeDocumented.class"
    },
    {
      "glob": "kotlin/annotation/Retention.class"
    },
    {
      "glob": "kotlin/annotation/Target.class"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "org/springframework/aot/hint/annotation/Reflective.class"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/InitializingBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/SmartInitializingSingleton.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/beans/BeansEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/condition/ConditionsReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/ShutdownEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jackson/JacksonEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration$WebEndpointServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ConditionalOnEnabledHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$AdaptedReactiveHealthContributors.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/HeapDumpWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/ThreadDumpEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$NoMeterRegistryCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$SingleInjectableMeterRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/JvmMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration$LogbackLoggingCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration$MeterRegistryCloser.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/NoOpMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/SystemMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$Cache2kCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$HazelcastCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$JCacheCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/ConditionalOnEnabledMetricsExport.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/integration/IntegrationMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/startup/StartupTimeMetricsListenerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/task/TaskExecutorMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MetricsWithTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$ObservedAspectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestTemplateObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/WebClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/reactive/WebFluxObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/sbom/SbomEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/SecurityRequestMatchersManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/startup/StartupEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/ManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ReactiveHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ServletHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseyChildManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseySameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/mappings/MappingsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ConditionalOnManagementPort.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/EnableManagementContext.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$DifferentManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations$ReactorResourceFactoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$MaxIdleTimeInMemoryWebSessionStore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WebFluxConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WelcomePageConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebSessionIdResolverAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$HttpClient5.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$JdkClient.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/ConfigurationPropertiesRebinderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/PauseResumeEndpointsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration$JpaInvokerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration$RefreshProperties.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithoutIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/WritableEnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$ActuatorConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ConditionalOnBlockingDiscoveryEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/ConditionalOnDiscoveryEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/ConditionalOnReactiveDiscoveryEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition$RestClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition$RestTemplatePresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerDefaultMappingsProviderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition$LoadBalancerClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition$ReactiveLoadBalancerFactoryPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/CommonsConfigAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/UtilAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/config/client/ConfigClientAutoConfiguration$ConfigClientWatchConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/config/client/ConfigClientAutoConfiguration$ConfigServerHealthIndicatorConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/config/client/ConfigClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompatibilityVerifierAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition$OnBootstrapEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition$OnBootstrapMarkerClassPresent.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition$OnUseLegacyProcessingEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition$OnBootstrapEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition$OnBootstrapMarkerClassPresent.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition$OnUseLegacyProcessingEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/ApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/EnvironmentAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/DeferredImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/http/codec/CodecConfigurer.properties"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/Mapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RequestMapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ResponseBody.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestController.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$EmptyHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoUpgradeStrategyWebSocketService.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurer.class"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "static/index.html"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    }
  ],
  "bundles": [],
  "jni": [
    {
      "type": "[B"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[[B"
    },
    {
      "type": "io.netty.handler.ssl.OpenSslClientSessionCache"
    },
    {
      "type": "io.netty.handler.ssl.OpenSslSessionCache",
      "methods": [
        {
          "name": "getSession",
          "parameterTypes": [
            "long",
            "byte[]"
          ]
        },
        {
          "name": "sessionCreated",
          "parameterTypes": [
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback"
    },
    {
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier",
      "methods": [
        {
          "name": "verify",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.Buffer"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "byte[][]",
            "io.netty.internal.tcnative.CertificateCallback"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.CertificateVerifierTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String",
            "io.netty.internal.tcnative.CertificateVerifier"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.Library"
    },
    {
      "type": "io.netty.internal.tcnative.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.internal.tcnative.SSL"
    },
    {
      "type": "io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "byte[]",
            "io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask",
      "fields": [
        {
          "name": "resultBytes"
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLSession"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask",
      "fields": [
        {
          "name": "complete"
        },
        {
          "name": "returnValue"
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}